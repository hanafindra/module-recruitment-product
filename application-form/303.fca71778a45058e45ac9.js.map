{"version":3,"file":"303.fca71778a45058e45ac9.js","mappings":"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","sources":["webpack://application_form/../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://application_form/../../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://application_form/../../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://application_form/../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n"],"names":["sides","alignments","placements","reduce","acc","side","concat","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getOppositeAlignmentPlacement","replace","getPaddingObject","padding","expandPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","getBoundingRect","minX","map","minY","getCssDimensions","css","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","win","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayerSelectors","isTopLayer","selector","matches","e","getWindowScrollBarX","scrollLeft","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","body","ownerDocument","scrollWidth","scrollHeight","scrollTop","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","documentElement","offsets","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","topLayer","clippingAncestors","cache","cachedResult","get","result","filter","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","offset","arrow","alignmentOffset","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","allowedPlacements","autoAlignment","detectOverflowOptions","placements$1","undefined","getPlacementList","currentIndex","autoPlacement","index","currentPlacement","alignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","d","slice","sort","a","b","resetPlacement","every","checkMainAxis","checkCrossAxis","limiter","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isBasePlacement","oppositePlacement","getExpandedPlacements","push","list","isStart","lr","rl","tb","bt","getSideList","getOppositeAxisPlacements","overflowsData","flip","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","apply","isYAxis","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","shift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","nativeClientRects","clientRects","sortedRects","groups","prevRect","i","getRectsByLine","fallback","resetRects","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","defaultView","window","document","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isContainingBlock","webkit","isWebKit","transform","perspective","containerType","backdropFilter","willChange","contain","getContainingBlock","getParentNode","isLastTraversableNode","CSS","supports","getNodeScroll","pageXOffset","pageYOffset","assignedSlot","host","getNearestOverflowAncestor","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody"],"sourceRoot":""}