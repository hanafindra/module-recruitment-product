{"version":3,"file":"388.6889c67ab7e644bfc919.js","mappings":"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","sources":["webpack://cms/../../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://cms/../../../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://cms/../../../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://cms/../../../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isTopLayer(currentNode)) {\n      return null;\n    }\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n"],"names":["sides","alignments","placements","reduce","acc","side","concat","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","reference","floating","getOppositePlacement","getOppositeAlignmentPlacement","replace","getPaddingObject","padding","expandPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","getBoundingRect","minX","map","minY","getCssDimensions","css","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","win","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","scrollLeft","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","body","ownerDocument","scrollWidth","scrollHeight","scrollTop","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","documentElement","offsets","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","topLayer","clippingAncestors","cache","cachedResult","get","result","filter","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","e","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","offset","arrow","alignmentOffset","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","allowedPlacements","autoAlignment","detectOverflowOptions","placements$1","undefined","getPlacementList","currentIndex","autoPlacement","index","currentPlacement","alignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","d","slice","sort","a","b","resetPlacement","every","checkMainAxis","checkCrossAxis","limiter","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","oppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","push","list","isStart","lr","rl","tb","bt","getSideList","getOppositeAxisPlacements","overflowsData","flip","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$filter2","currentSideAxis","apply","isYAxis","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","shift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","nativeClientRects","clientRects","sortedRects","groups","prevRect","i","getRectsByLine","fallback","resetRects","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","defaultView","window","document","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isTopLayer","selector","matches","isContainingBlock","webkit","isWebKit","transform","perspective","containerType","backdropFilter","willChange","contain","getContainingBlock","getParentNode","isLastTraversableNode","CSS","supports","getNodeScroll","pageXOffset","pageYOffset","assignedSlot","host","getNearestOverflowAncestor","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody"],"sourceRoot":""}